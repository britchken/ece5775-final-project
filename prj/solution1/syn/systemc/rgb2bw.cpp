// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "rgb2bw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic rgb2bw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic rgb2bw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> rgb2bw::ap_ST_st1_fsm_0 = "00";
const sc_lv<2> rgb2bw::ap_ST_st2_fsm_1 = "1";
const sc_lv<2> rgb2bw::ap_ST_pp0_stg0_fsm_2 = "10";
const sc_lv<1> rgb2bw::ap_const_lv1_0 = "0";
const sc_lv<12> rgb2bw::ap_const_lv12_0 = "000000000000";
const sc_lv<12> rgb2bw::ap_const_lv12_1 = "1";
const sc_lv<10> rgb2bw::ap_const_lv10_F9 = "11111001";

rgb2bw::rgb2bw(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond4_fu_108_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond4_fu_108_p2 );

    SC_METHOD(thread_ap_sig_bdd_47);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_bdd_71);
    sensitive << ( rgb_data_stream_0_V_empty_n );
    sensitive << ( rgb_data_stream_1_V_empty_n );
    sensitive << ( rgb_data_stream_2_V_empty_n );
    sensitive << ( exitcond_reg_186 );

    SC_METHOD(thread_ap_sig_bdd_79);
    sensitive << ( bw_data_stream_0_V_full_n );
    sensitive << ( ap_reg_ppstg_exitcond_reg_186_pp0_it1 );

    SC_METHOD(thread_bw_data_stream_0_V_din);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_71 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_186_pp0_it1 );
    sensitive << ( ap_sig_bdd_79 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( not_s_fu_158_p2 );

    SC_METHOD(thread_bw_data_stream_0_V_write);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_71 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_186_pp0_it1 );
    sensitive << ( ap_sig_bdd_79 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_exitcond4_fu_108_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( rgb_rows_V_read );
    sensitive << ( t_V_2_reg_85 );

    SC_METHOD(thread_exitcond_fu_119_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( rgb_cols_V_read );
    sensitive << ( t_V_reg_96 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_71 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_79 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_i_V_fu_113_p2);
    sensitive << ( t_V_2_reg_85 );

    SC_METHOD(thread_j_V_fu_124_p2);
    sensitive << ( t_V_reg_96 );

    SC_METHOD(thread_not_s_fu_158_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_71 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_reg_186_pp0_it1 );
    sensitive << ( ap_sig_bdd_79 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( tmp_6_reg_195 );

    SC_METHOD(thread_rgb_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_reg_186 );
    sensitive << ( ap_sig_bdd_71 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_79 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_rgb_data_stream_1_V_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_reg_186 );
    sensitive << ( ap_sig_bdd_71 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_79 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_rgb_data_stream_2_V_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_reg_186 );
    sensitive << ( ap_sig_bdd_71 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_79 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );

    SC_METHOD(thread_tmp_4_cast_fu_138_p1);
    sensitive << ( rgb_data_stream_2_V_dout );

    SC_METHOD(thread_tmp_5_cast_fu_148_p1);
    sensitive << ( tmp_5_fu_142_p2 );

    SC_METHOD(thread_tmp_5_fu_142_p2);
    sensitive << ( tmp_cast_121_fu_134_p1 );
    sensitive << ( tmp_cast_fu_130_p1 );

    SC_METHOD(thread_tmp_6_fu_152_p2);
    sensitive << ( tmp_5_cast_fu_148_p1 );
    sensitive << ( tmp_4_cast_fu_138_p1 );

    SC_METHOD(thread_tmp_cast_121_fu_134_p1);
    sensitive << ( rgb_data_stream_1_V_dout );

    SC_METHOD(thread_tmp_cast_fu_130_p1);
    sensitive << ( rgb_data_stream_0_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_47 );
    sensitive << ( exitcond_fu_119_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_71 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_79 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( exitcond4_fu_108_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "rgb2bw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    const char* dump_vcd = std::getenv("AP_WRITE_VCD");
    if (dump_vcd && string(dump_vcd) == "1" ) {
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, rgb_rows_V_read, "(port)rgb_rows_V_read");
    sc_trace(mVcdFile, rgb_cols_V_read, "(port)rgb_cols_V_read");
    sc_trace(mVcdFile, rgb_data_stream_0_V_dout, "(port)rgb_data_stream_0_V_dout");
    sc_trace(mVcdFile, rgb_data_stream_0_V_empty_n, "(port)rgb_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, rgb_data_stream_0_V_read, "(port)rgb_data_stream_0_V_read");
    sc_trace(mVcdFile, rgb_data_stream_1_V_dout, "(port)rgb_data_stream_1_V_dout");
    sc_trace(mVcdFile, rgb_data_stream_1_V_empty_n, "(port)rgb_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, rgb_data_stream_1_V_read, "(port)rgb_data_stream_1_V_read");
    sc_trace(mVcdFile, rgb_data_stream_2_V_dout, "(port)rgb_data_stream_2_V_dout");
    sc_trace(mVcdFile, rgb_data_stream_2_V_empty_n, "(port)rgb_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, rgb_data_stream_2_V_read, "(port)rgb_data_stream_2_V_read");
    sc_trace(mVcdFile, bw_data_stream_0_V_din, "(port)bw_data_stream_0_V_din");
    sc_trace(mVcdFile, bw_data_stream_0_V_full_n, "(port)bw_data_stream_0_V_full_n");
    sc_trace(mVcdFile, bw_data_stream_0_V_write, "(port)bw_data_stream_0_V_write");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, t_V_reg_96, "t_V_reg_96");
    sc_trace(mVcdFile, ap_sig_bdd_47, "ap_sig_bdd_47");
    sc_trace(mVcdFile, i_V_fu_113_p2, "i_V_fu_113_p2");
    sc_trace(mVcdFile, i_V_reg_181, "i_V_reg_181");
    sc_trace(mVcdFile, exitcond_fu_119_p2, "exitcond_fu_119_p2");
    sc_trace(mVcdFile, exitcond_reg_186, "exitcond_reg_186");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_sig_bdd_71, "ap_sig_bdd_71");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_186_pp0_it1, "ap_reg_ppstg_exitcond_reg_186_pp0_it1");
    sc_trace(mVcdFile, ap_sig_bdd_79, "ap_sig_bdd_79");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, j_V_fu_124_p2, "j_V_fu_124_p2");
    sc_trace(mVcdFile, tmp_6_fu_152_p2, "tmp_6_fu_152_p2");
    sc_trace(mVcdFile, tmp_6_reg_195, "tmp_6_reg_195");
    sc_trace(mVcdFile, exitcond4_fu_108_p2, "exitcond4_fu_108_p2");
    sc_trace(mVcdFile, t_V_2_reg_85, "t_V_2_reg_85");
    sc_trace(mVcdFile, tmp_cast_121_fu_134_p1, "tmp_cast_121_fu_134_p1");
    sc_trace(mVcdFile, tmp_cast_fu_130_p1, "tmp_cast_fu_130_p1");
    sc_trace(mVcdFile, tmp_5_fu_142_p2, "tmp_5_fu_142_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_148_p1, "tmp_5_cast_fu_148_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_138_p1, "tmp_4_cast_fu_138_p1");
    sc_trace(mVcdFile, not_s_fu_158_p2, "not_s_fu_158_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");

    }
}

rgb2bw::~rgb2bw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void rgb2bw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_108_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
             !esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_108_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
             esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_108_p2.read())) || 
                    (esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
                     !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
                     !esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
             !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        } else if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_108_p2.read()))) {
            ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
         !esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_0))) {
        t_V_2_reg_85 = i_V_reg_181.read();
    } else if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !ap_sig_bdd_47.read())) {
        t_V_2_reg_85 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_108_p2.read()))) {
        t_V_reg_96 = ap_const_lv12_0;
    } else if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
                esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_0))) {
        t_V_reg_96 = j_V_fu_124_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        ap_reg_ppstg_exitcond_reg_186_pp0_it1 = exitcond_reg_186.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        exitcond_reg_186 = exitcond_fu_119_p2.read();
    }
    if (esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        i_V_reg_181 = i_V_fu_113_p2.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(exitcond_reg_186.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        tmp_6_reg_195 = tmp_6_fu_152_p2.read();
    }
}

void rgb2bw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_108_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void rgb2bw::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void rgb2bw::thread_ap_ready() {
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_108_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void rgb2bw::thread_ap_sig_bdd_47() {
    ap_sig_bdd_47 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void rgb2bw::thread_ap_sig_bdd_71() {
    ap_sig_bdd_71 = ((esl_seteq<1,1,1>(rgb_data_stream_0_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(exitcond_reg_186.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(exitcond_reg_186.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(rgb_data_stream_1_V_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_reg_186.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(rgb_data_stream_2_V_empty_n.read(), ap_const_logic_0)));
}

void rgb2bw::thread_ap_sig_bdd_79() {
    ap_sig_bdd_79 = (esl_seteq<1,1,1>(bw_data_stream_0_V_full_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_186_pp0_it1.read()));
}

void rgb2bw::thread_bw_data_stream_0_V_din() {
    bw_data_stream_0_V_din = esl_sext<8,1>(not_s_fu_158_p2.read());
}

void rgb2bw::thread_bw_data_stream_0_V_write() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_186_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
         !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        bw_data_stream_0_V_write = ap_const_logic_1;
    } else {
        bw_data_stream_0_V_write = ap_const_logic_0;
    }
}

void rgb2bw::thread_exitcond4_fu_108_p2() {
    exitcond4_fu_108_p2 = (!t_V_2_reg_85.read().is_01() || !rgb_rows_V_read.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_2_reg_85.read() == rgb_rows_V_read.read());
}

void rgb2bw::thread_exitcond_fu_119_p2() {
    exitcond_fu_119_p2 = (!t_V_reg_96.read().is_01() || !rgb_cols_V_read.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_96.read() == rgb_cols_V_read.read());
}

void rgb2bw::thread_i_V_fu_113_p2() {
    i_V_fu_113_p2 = (!t_V_2_reg_85.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_bigint<12>(t_V_2_reg_85.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void rgb2bw::thread_j_V_fu_124_p2() {
    j_V_fu_124_p2 = (!t_V_reg_96.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_bigint<12>(t_V_reg_96.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void rgb2bw::thread_not_s_fu_158_p2() {
    not_s_fu_158_p2 = (!tmp_6_reg_195.read().is_01() || !ap_const_lv10_F9.is_01())? sc_lv<1>(): (sc_biguint<10>(tmp_6_reg_195.read()) > sc_biguint<10>(ap_const_lv10_F9));
}

void rgb2bw::thread_rgb_data_stream_0_V_read() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_186.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        rgb_data_stream_0_V_read = ap_const_logic_1;
    } else {
        rgb_data_stream_0_V_read = ap_const_logic_0;
    }
}

void rgb2bw::thread_rgb_data_stream_1_V_read() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_186.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        rgb_data_stream_1_V_read = ap_const_logic_1;
    } else {
        rgb_data_stream_1_V_read = ap_const_logic_0;
    }
}

void rgb2bw::thread_rgb_data_stream_2_V_read() {
    if ((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_186.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))))) {
        rgb_data_stream_2_V_read = ap_const_logic_1;
    } else {
        rgb_data_stream_2_V_read = ap_const_logic_0;
    }
}

void rgb2bw::thread_tmp_4_cast_fu_138_p1() {
    tmp_4_cast_fu_138_p1 = esl_zext<10,8>(rgb_data_stream_2_V_dout.read());
}

void rgb2bw::thread_tmp_5_cast_fu_148_p1() {
    tmp_5_cast_fu_148_p1 = esl_zext<10,9>(tmp_5_fu_142_p2.read());
}

void rgb2bw::thread_tmp_5_fu_142_p2() {
    tmp_5_fu_142_p2 = (!tmp_cast_121_fu_134_p1.read().is_01() || !tmp_cast_fu_130_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(tmp_cast_121_fu_134_p1.read()) + sc_biguint<9>(tmp_cast_fu_130_p1.read()));
}

void rgb2bw::thread_tmp_6_fu_152_p2() {
    tmp_6_fu_152_p2 = (!tmp_5_cast_fu_148_p1.read().is_01() || !tmp_4_cast_fu_138_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(tmp_5_cast_fu_148_p1.read()) + sc_biguint<10>(tmp_4_cast_fu_138_p1.read()));
}

void rgb2bw::thread_tmp_cast_121_fu_134_p1() {
    tmp_cast_121_fu_134_p1 = esl_zext<9,8>(rgb_data_stream_1_V_dout.read());
}

void rgb2bw::thread_tmp_cast_fu_130_p1() {
    tmp_cast_fu_130_p1 = esl_zext<9,8>(rgb_data_stream_0_V_dout.read());
}

void rgb2bw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!ap_sig_bdd_47.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_108_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && !esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if (((esl_seteq<1,2,2>(ap_ST_pp0_stg0_fsm_2, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && 
  !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !((ap_sig_bdd_71.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_79.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()))) && 
  !esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}
}

