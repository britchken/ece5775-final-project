// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _bounding_box_HH_
#define _bounding_box_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct bounding_box : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > src_rows_V_read;
    sc_in< sc_lv<12> > src_cols_V_read;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_out< sc_lv<8> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<32> > bb_top_V_din;
    sc_in< sc_logic > bb_top_V_full_n;
    sc_out< sc_logic > bb_top_V_write;
    sc_out< sc_lv<32> > bb_bottom_V_din;
    sc_in< sc_logic > bb_bottom_V_full_n;
    sc_out< sc_logic > bb_bottom_V_write;
    sc_out< sc_lv<32> > bb_left_V_din;
    sc_in< sc_logic > bb_left_V_full_n;
    sc_out< sc_logic > bb_left_V_write;
    sc_out< sc_lv<32> > bb_right_V_din;
    sc_in< sc_logic > bb_right_V_full_n;
    sc_out< sc_logic > bb_right_V_write;


    // Module declarations
    bounding_box(sc_module_name name);
    SC_HAS_PROCESS(bounding_box);

    ~bounding_box();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<64> > guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns;
    sc_signal< sc_lv<32> > p_bottom;
    sc_signal< sc_lv<64> > guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns_1;
    sc_signal< sc_lv<32> > p_right;
    sc_signal< sc_lv<32> > p_top;
    sc_signal< sc_lv<32> > p_left;
    sc_signal< sc_lv<12> > t_V_reg_227;
    sc_signal< sc_lv<12> > ap_reg_ppstg_t_V_reg_227_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > exitcond_reg_772;
    sc_signal< bool > ap_sig_bdd_67;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_772_pp0_it4;
    sc_signal< bool > ap_sig_bdd_93;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_lv<12> > ap_reg_ppstg_t_V_reg_227_pp0_it2;
    sc_signal< bool > ap_sig_bdd_106;
    sc_signal< sc_lv<13> > op2_assign_8_fu_328_p2;
    sc_signal< sc_lv<13> > op2_assign_8_reg_722;
    sc_signal< sc_lv<13> > op2_assign_9_fu_338_p2;
    sc_signal< sc_lv<13> > op2_assign_9_reg_727;
    sc_signal< sc_lv<13> > op2_assign_fu_344_p2;
    sc_signal< sc_lv<13> > op2_assign_reg_732;
    sc_signal< sc_lv<13> > op2_assign_3_fu_350_p2;
    sc_signal< sc_lv<13> > op2_assign_3_reg_737;
    sc_signal< sc_lv<12> > i_V_fu_381_p2;
    sc_signal< sc_lv<12> > i_V_reg_745;
    sc_signal< sc_lv<1> > not4_fu_391_p2;
    sc_signal< sc_lv<1> > not4_reg_750;
    sc_signal< sc_lv<1> > exitcond1_fu_376_p2;
    sc_signal< sc_lv<1> > not5_fu_396_p2;
    sc_signal< sc_lv<1> > not5_reg_755;
    sc_signal< sc_lv<32> > bottom_6_fu_401_p1;
    sc_signal< sc_lv<32> > bottom_6_reg_760;
    sc_signal< sc_lv<1> > sel_tmp3_fu_405_p2;
    sc_signal< sc_lv<1> > sel_tmp3_reg_767;
    sc_signal< sc_lv<1> > exitcond_fu_411_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_772_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_772_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_772_pp0_it3;
    sc_signal< sc_lv<12> > j_V_fu_416_p2;
    sc_signal< sc_lv<12> > j_V_reg_776;
    sc_signal< sc_lv<1> > not9_fu_426_p2;
    sc_signal< sc_lv<1> > not9_reg_781;
    sc_signal< sc_lv<1> > ap_reg_ppstg_not9_reg_781_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_not9_reg_781_pp0_it2;
    sc_signal< sc_lv<1> > or_cond1_fu_436_p2;
    sc_signal< sc_lv<1> > or_cond1_reg_787;
    sc_signal< sc_lv<1> > ap_reg_ppstg_or_cond1_reg_787_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_or_cond1_reg_787_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_or_cond1_reg_787_pp0_it3;
    sc_signal< sc_lv<8> > tmp_16_reg_791;
    sc_signal< sc_lv<8> > ap_reg_ppstg_tmp_16_reg_791_pp0_it2;
    sc_signal< sc_lv<8> > ap_reg_ppstg_tmp_16_reg_791_pp0_it3;
    sc_signal< sc_lv<8> > ap_reg_ppstg_tmp_16_reg_791_pp0_it4;
    sc_signal< sc_lv<1> > or_cond_fu_452_p2;
    sc_signal< sc_lv<1> > or_cond_reg_797;
    sc_signal< sc_lv<1> > ap_reg_ppstg_or_cond_reg_797_pp0_it3;
    sc_signal< sc_lv<1> > sel_tmp1_fu_464_p2;
    sc_signal< sc_lv<1> > sel_tmp1_reg_806;
    sc_signal< sc_lv<32> > right_6_fu_488_p1;
    sc_signal< sc_lv<32> > right_6_reg_811;
    sc_signal< sc_lv<1> > sel_tmp9_demorgan_fu_506_p2;
    sc_signal< sc_lv<1> > sel_tmp9_demorgan_reg_817;
    sc_signal< sc_lv<1> > sel_tmp2_fu_510_p2;
    sc_signal< sc_lv<1> > sel_tmp2_reg_823;
    sc_signal< sc_lv<1> > sel_tmp4_fu_514_p2;
    sc_signal< sc_lv<1> > sel_tmp4_reg_828;
    sc_signal< sc_lv<32> > bottom_1_fu_534_p3;
    sc_signal< sc_lv<32> > bottom_1_reg_834;
    sc_signal< sc_lv<32> > right_1_fu_557_p3;
    sc_signal< sc_lv<32> > right_1_reg_839;
    sc_signal< sc_lv<12> > t_V_5_reg_215;
    sc_signal< sc_lv<12> > ap_reg_phibuf_t_V_5_reg_215;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_lv<12> > t_V_phi_fu_231_p4;
    sc_signal< sc_lv<64> > tmp_11_fu_265_p5;
    sc_signal< sc_lv<1> > tmp_s_fu_244_p2;
    sc_signal< sc_lv<32> > tmp_48_i_cast_fu_260_p1;
    sc_signal< sc_lv<64> > tmp_13_fu_303_p5;
    sc_signal< sc_lv<1> > tmp_3_fu_282_p2;
    sc_signal< sc_lv<32> > tmp_51_i_cast_fu_298_p1;
    sc_signal< sc_lv<32> > top_1_fu_621_p3;
    sc_signal< sc_lv<32> > left_4_fu_660_p3;
    sc_signal< sc_lv<32> > right_fu_88;
    sc_signal< sc_lv<32> > left_1_fu_92;
    sc_signal< sc_lv<32> > left_fu_320_p1;
    sc_signal< sc_lv<32> > bottom_fu_96;
    sc_signal< sc_lv<32> > top_2_fu_100;
    sc_signal< sc_lv<32> > top_fu_316_p1;
    sc_signal< sc_lv<8> > tmp_fu_240_p1;
    sc_signal< sc_lv<13> > tmp_47_i_cast_fu_250_p1;
    sc_signal< sc_lv<13> > tmp_48_i_fu_254_p2;
    sc_signal< sc_lv<8> > tmp_12_fu_278_p1;
    sc_signal< sc_lv<13> > tmp_50_i_cast_fu_288_p1;
    sc_signal< sc_lv<13> > tmp_51_i_fu_292_p2;
    sc_signal< sc_lv<13> > retval_i_cast_fu_324_p1;
    sc_signal< sc_lv<13> > retval_i5_cast_fu_334_p1;
    sc_signal< sc_lv<13> > tmp_45_cast_fu_387_p1;
    sc_signal< sc_lv<13> > tmp_47_cast_fu_422_p1;
    sc_signal< sc_lv<1> > not6_fu_431_p2;
    sc_signal< sc_lv<1> > p_not_fu_441_p2;
    sc_signal< sc_lv<1> > not_fu_446_p2;
    sc_signal< sc_lv<1> > sel_tmp1_demorgan_fu_458_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_476_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_492_p2;
    sc_signal< sc_lv<32> > bottom_3_fu_481_p3;
    sc_signal< sc_lv<32> > bottom_4_fu_519_p3;
    sc_signal< sc_lv<32> > bottom_5_fu_526_p3;
    sc_signal< sc_lv<32> > right_3_fu_498_p3;
    sc_signal< sc_lv<32> > right_4_fu_542_p3;
    sc_signal< sc_lv<32> > right_5_fu_549_p3;
    sc_signal< sc_lv<1> > tmp_6_fu_581_p2;
    sc_signal< sc_lv<12> > tmp_15_fu_586_p1;
    sc_signal< sc_lv<12> > top_4_fu_590_p3;
    sc_signal< sc_lv<32> > top_5_cast_fu_598_p1;
    sc_signal< sc_lv<32> > sel_tmp6_fu_607_p3;
    sc_signal< sc_lv<32> > sel_tmp_fu_614_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_602_p2;
    sc_signal< sc_lv<1> > tmp2_fu_629_p2;
    sc_signal< sc_lv<1> > sel_tmp8_fu_634_p2;
    sc_signal< sc_lv<32> > left_3_fu_639_p3;
    sc_signal< sc_lv<32> > left_5_fu_646_p3;
    sc_signal< sc_lv<32> > left_6_fu_653_p3;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<2> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<13> ap_const_lv13_1FFF;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<13> ap_const_lv13_1F33;
    static const sc_lv<13> ap_const_lv13_1FC0;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<12> ap_const_lv12_CE;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_106();
    void thread_ap_sig_bdd_67();
    void thread_ap_sig_bdd_93();
    void thread_bb_bottom_V_din();
    void thread_bb_bottom_V_write();
    void thread_bb_left_V_din();
    void thread_bb_left_V_write();
    void thread_bb_right_V_din();
    void thread_bb_right_V_write();
    void thread_bb_top_V_din();
    void thread_bb_top_V_write();
    void thread_bottom_1_fu_534_p3();
    void thread_bottom_3_fu_481_p3();
    void thread_bottom_4_fu_519_p3();
    void thread_bottom_5_fu_526_p3();
    void thread_bottom_6_fu_401_p1();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_exitcond1_fu_376_p2();
    void thread_exitcond_fu_411_p2();
    void thread_i_V_fu_381_p2();
    void thread_j_V_fu_416_p2();
    void thread_left_3_fu_639_p3();
    void thread_left_4_fu_660_p3();
    void thread_left_5_fu_646_p3();
    void thread_left_6_fu_653_p3();
    void thread_left_fu_320_p1();
    void thread_not4_fu_391_p2();
    void thread_not5_fu_396_p2();
    void thread_not6_fu_431_p2();
    void thread_not9_fu_426_p2();
    void thread_not_fu_446_p2();
    void thread_op2_assign_3_fu_350_p2();
    void thread_op2_assign_8_fu_328_p2();
    void thread_op2_assign_9_fu_338_p2();
    void thread_op2_assign_fu_344_p2();
    void thread_or_cond1_fu_436_p2();
    void thread_or_cond_fu_452_p2();
    void thread_p_not_fu_441_p2();
    void thread_retval_i5_cast_fu_334_p1();
    void thread_retval_i_cast_fu_324_p1();
    void thread_right_1_fu_557_p3();
    void thread_right_3_fu_498_p3();
    void thread_right_4_fu_542_p3();
    void thread_right_5_fu_549_p3();
    void thread_right_6_fu_488_p1();
    void thread_sel_tmp1_demorgan_fu_458_p2();
    void thread_sel_tmp1_fu_464_p2();
    void thread_sel_tmp2_fu_510_p2();
    void thread_sel_tmp3_fu_405_p2();
    void thread_sel_tmp4_fu_514_p2();
    void thread_sel_tmp6_fu_607_p3();
    void thread_sel_tmp8_fu_634_p2();
    void thread_sel_tmp9_demorgan_fu_506_p2();
    void thread_sel_tmp_fu_614_p3();
    void thread_src_data_stream_0_V_read();
    void thread_t_V_phi_fu_231_p4();
    void thread_tmp2_fu_629_p2();
    void thread_tmp_11_fu_265_p5();
    void thread_tmp_12_fu_278_p1();
    void thread_tmp_13_fu_303_p5();
    void thread_tmp_15_fu_586_p1();
    void thread_tmp_3_fu_282_p2();
    void thread_tmp_45_cast_fu_387_p1();
    void thread_tmp_47_cast_fu_422_p1();
    void thread_tmp_47_i_cast_fu_250_p1();
    void thread_tmp_48_i_cast_fu_260_p1();
    void thread_tmp_48_i_fu_254_p2();
    void thread_tmp_50_i_cast_fu_288_p1();
    void thread_tmp_51_i_cast_fu_298_p1();
    void thread_tmp_51_i_fu_292_p2();
    void thread_tmp_5_fu_476_p2();
    void thread_tmp_6_fu_581_p2();
    void thread_tmp_7_fu_492_p2();
    void thread_tmp_8_fu_602_p2();
    void thread_tmp_fu_240_p1();
    void thread_tmp_s_fu_244_p2();
    void thread_top_1_fu_621_p3();
    void thread_top_4_fu_590_p3();
    void thread_top_5_cast_fu_598_p1();
    void thread_top_fu_316_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
