// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _draw_HH_
#define _draw_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct draw : public sc_module {
    // Port declarations 39
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > src_rows_V_read;
    sc_in< sc_lv<12> > src_cols_V_read;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_out< sc_lv<8> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<8> > dst_data_stream_1_V_din;
    sc_in< sc_logic > dst_data_stream_1_V_full_n;
    sc_out< sc_logic > dst_data_stream_1_V_write;
    sc_out< sc_lv<8> > dst_data_stream_2_V_din;
    sc_in< sc_logic > dst_data_stream_2_V_full_n;
    sc_out< sc_logic > dst_data_stream_2_V_write;
    sc_in< sc_lv<32> > bb_top_V_dout;
    sc_in< sc_logic > bb_top_V_empty_n;
    sc_out< sc_logic > bb_top_V_read;
    sc_in< sc_lv<32> > bb_bottom_V_dout;
    sc_in< sc_logic > bb_bottom_V_empty_n;
    sc_out< sc_logic > bb_bottom_V_read;
    sc_in< sc_lv<32> > bb_left_V_dout;
    sc_in< sc_logic > bb_left_V_empty_n;
    sc_out< sc_logic > bb_left_V_read;
    sc_in< sc_lv<32> > bb_right_V_dout;
    sc_in< sc_logic > bb_right_V_empty_n;
    sc_out< sc_logic > bb_right_V_read;
    sc_in< sc_lv<32> > err_V_dout;
    sc_in< sc_logic > err_V_empty_n;
    sc_out< sc_logic > err_V_read;
    sc_in< sc_lv<1> > val_V_V_dout;
    sc_in< sc_logic > val_V_V_empty_n;
    sc_out< sc_logic > val_V_V_read;


    // Module declarations
    draw(sc_module_name name);
    SC_HAS_PROCESS(draw);

    ~draw();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_lv<2> > state;
    sc_signal< sc_lv<12> > t_V_reg_205;
    sc_signal< bool > ap_sig_bdd_73;
    sc_signal< sc_lv<12> > i_V_fu_232_p2;
    sc_signal< sc_lv<12> > i_V_reg_582;
    sc_signal< sc_lv<32> > tmp_s_fu_238_p1;
    sc_signal< sc_lv<32> > tmp_s_reg_587;
    sc_signal< sc_lv<1> > exitcond4_fu_227_p2;
    sc_signal< sc_lv<1> > exitcond_fu_242_p2;
    sc_signal< sc_lv<1> > exitcond_reg_593;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< bool > ap_sig_bdd_114;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_593_pp0_it3;
    sc_signal< bool > ap_sig_bdd_132;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_593_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_593_pp0_it2;
    sc_signal< sc_lv<12> > j_V_fu_247_p2;
    sc_signal< sc_lv<12> > j_V_reg_597;
    sc_signal< sc_lv<1> > tmp_3_fu_306_p2;
    sc_signal< sc_lv<1> > tmp_3_reg_611;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_3_reg_611_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_3_reg_611_pp0_it3;
    sc_signal< sc_lv<1> > tmp_4_fu_312_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_618;
    sc_signal< sc_lv<1> > tmp2_fu_328_p2;
    sc_signal< sc_lv<1> > tmp2_reg_623;
    sc_signal< sc_lv<1> > tmp_15_fu_334_p2;
    sc_signal< sc_lv<1> > tmp_15_reg_628;
    sc_signal< sc_lv<1> > or_cond7_fu_343_p2;
    sc_signal< sc_lv<1> > or_cond7_reg_634;
    sc_signal< sc_lv<1> > tmp_16_fu_347_p2;
    sc_signal< sc_lv<1> > tmp_16_reg_639;
    sc_signal< sc_lv<1> > tmp_17_fu_353_p2;
    sc_signal< sc_lv<1> > tmp_17_reg_645;
    sc_signal< sc_lv<1> > sel_tmp5_demorgan_fu_364_p2;
    sc_signal< sc_lv<1> > sel_tmp5_demorgan_reg_650;
    sc_signal< sc_lv<1> > sel_tmp4_fu_375_p2;
    sc_signal< sc_lv<1> > sel_tmp4_reg_656;
    sc_signal< sc_lv<1> > ap_reg_ppstg_sel_tmp4_reg_656_pp0_it3;
    sc_signal< sc_lv<8> > sel_tmp9_cast_fu_405_p3;
    sc_signal< sc_lv<8> > sel_tmp9_cast_reg_663;
    sc_signal< sc_lv<1> > tmp_19_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_668;
    sc_signal< sc_lv<1> > sel_tmp10_fu_424_p2;
    sc_signal< sc_lv<1> > sel_tmp10_reg_675;
    sc_signal< sc_lv<8> > sel_tmp14_fu_429_p3;
    sc_signal< sc_lv<8> > sel_tmp14_reg_682;
    sc_signal< sc_lv<12> > t_V_7_reg_194;
    sc_signal< sc_lv<12> > t_V_phi_fu_209_p4;
    sc_signal< sc_lv<1> > tmp_V_fiforead_fu_136_p2;
    sc_signal< sc_lv<8> > pixel_out_val_0_1_fu_497_p3;
    sc_signal< sc_lv<8> > pixel_out_val_1_1_fu_471_p3;
    sc_signal< sc_lv<8> > pixel_out_val_2_1_fu_519_p3;
    sc_signal< sc_lv<1> > or_cond_fu_268_p2;
    sc_signal< sc_lv<1> > or_cond5_fu_291_p2;
    sc_signal< sc_lv<8> > pixel_out_val_2_fu_92;
    sc_signal< sc_lv<8> > pixel_out_val_0_fu_96;
    sc_signal< sc_lv<8> > pixel_out_val_1_fu_100;
    sc_signal< sc_lv<32> > state_loc_2_fu_104;
    sc_signal< sc_lv<32> > extLd_fu_218_p1;
    sc_signal< sc_lv<1> > p_not_fu_256_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_262_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_279_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_285_p2;
    sc_signal< sc_lv<32> > tmp_2_fu_302_p1;
    sc_signal< sc_lv<1> > tmp_5_fu_318_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_323_p2;
    sc_signal< sc_lv<1> > sel_tmp3_demorgan_fu_359_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_369_p2;
    sc_signal< sc_lv<1> > sel_tmp7_demorgan_fu_380_p2;
    sc_signal< sc_lv<1> > sel_tmp7_fu_384_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_395_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_400_p2;
    sc_signal< sc_lv<1> > sel_tmp8_fu_390_p2;
    sc_signal< sc_lv<1> > sel_tmp9_fu_419_p2;
    sc_signal< sc_lv<1> > tmp_20_fu_459_p2;
    sc_signal< sc_lv<8> > sel_tmp5_fu_452_p3;
    sc_signal< sc_lv<8> > sel_tmp3_fu_446_p3;
    sc_signal< sc_lv<8> > sel_tmp6_fu_463_p3;
    sc_signal< sc_lv<8> > sel_tmp13_fu_489_p1;
    sc_signal< sc_lv<8> > sel_tmp11_fu_479_p3;
    sc_signal< sc_lv<8> > sel_tmp13_fu_489_p3;
    sc_signal< sc_lv<8> > sel_tmp15_fu_505_p3;
    sc_signal< sc_lv<8> > sel_tmp16_fu_511_p3;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_482;
    sc_signal< bool > ap_sig_bdd_414;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<2> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_18F;
    static const sc_lv<32> ap_const_lv32_190;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_64;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_114();
    void thread_ap_sig_bdd_132();
    void thread_ap_sig_bdd_414();
    void thread_ap_sig_bdd_482();
    void thread_ap_sig_bdd_73();
    void thread_bb_bottom_V_read();
    void thread_bb_left_V_read();
    void thread_bb_right_V_read();
    void thread_bb_top_V_read();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_dst_data_stream_1_V_din();
    void thread_dst_data_stream_1_V_write();
    void thread_dst_data_stream_2_V_din();
    void thread_dst_data_stream_2_V_write();
    void thread_err_V_read();
    void thread_exitcond4_fu_227_p2();
    void thread_exitcond_fu_242_p2();
    void thread_extLd_fu_218_p1();
    void thread_i_V_fu_232_p2();
    void thread_j_V_fu_247_p2();
    void thread_or_cond5_fu_291_p2();
    void thread_or_cond7_fu_343_p2();
    void thread_or_cond_fu_268_p2();
    void thread_p_not_fu_256_p2();
    void thread_pixel_out_val_0_1_fu_497_p3();
    void thread_pixel_out_val_1_1_fu_471_p3();
    void thread_pixel_out_val_2_1_fu_519_p3();
    void thread_sel_tmp10_fu_424_p2();
    void thread_sel_tmp11_fu_479_p3();
    void thread_sel_tmp13_fu_489_p1();
    void thread_sel_tmp13_fu_489_p3();
    void thread_sel_tmp14_fu_429_p3();
    void thread_sel_tmp15_fu_505_p3();
    void thread_sel_tmp16_fu_511_p3();
    void thread_sel_tmp1_fu_395_p2();
    void thread_sel_tmp2_fu_400_p2();
    void thread_sel_tmp3_demorgan_fu_359_p2();
    void thread_sel_tmp3_fu_446_p3();
    void thread_sel_tmp4_fu_375_p2();
    void thread_sel_tmp5_demorgan_fu_364_p2();
    void thread_sel_tmp5_fu_452_p3();
    void thread_sel_tmp6_fu_463_p3();
    void thread_sel_tmp7_demorgan_fu_380_p2();
    void thread_sel_tmp7_fu_384_p2();
    void thread_sel_tmp8_fu_390_p2();
    void thread_sel_tmp9_cast_fu_405_p3();
    void thread_sel_tmp9_fu_419_p2();
    void thread_sel_tmp_fu_369_p2();
    void thread_src_data_stream_0_V_read();
    void thread_t_V_phi_fu_209_p4();
    void thread_tmp2_fu_328_p2();
    void thread_tmp_15_fu_334_p2();
    void thread_tmp_16_fu_347_p2();
    void thread_tmp_17_fu_353_p2();
    void thread_tmp_19_fu_413_p2();
    void thread_tmp_1_fu_285_p2();
    void thread_tmp_20_fu_459_p2();
    void thread_tmp_2_fu_302_p1();
    void thread_tmp_3_fu_306_p2();
    void thread_tmp_4_fu_312_p2();
    void thread_tmp_5_fu_318_p2();
    void thread_tmp_6_fu_323_p2();
    void thread_tmp_7_fu_262_p2();
    void thread_tmp_8_fu_279_p2();
    void thread_tmp_V_fiforead_fu_136_p2();
    void thread_tmp_s_fu_238_p1();
    void thread_val_V_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
