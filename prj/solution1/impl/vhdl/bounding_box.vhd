-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.2
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bounding_box is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_data_stream_0_V_read : OUT STD_LOGIC;
    dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_0_V_full_n : IN STD_LOGIC;
    dst_data_stream_0_V_write : OUT STD_LOGIC;
    bb_top_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    bb_top_V_full_n : IN STD_LOGIC;
    bb_top_V_write : OUT STD_LOGIC;
    bb_bottom_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    bb_bottom_V_full_n : IN STD_LOGIC;
    bb_bottom_V_write : OUT STD_LOGIC;
    bb_left_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    bb_left_V_full_n : IN STD_LOGIC;
    bb_left_V_write : OUT STD_LOGIC;
    bb_right_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    bb_right_V_full_n : IN STD_LOGIC;
    bb_right_V_write : OUT STD_LOGIC );
end;


architecture behav of bounding_box is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv13_1F33 : STD_LOGIC_VECTOR (12 downto 0) := "1111100110011";
    constant ap_const_lv13_1FC0 : STD_LOGIC_VECTOR (12 downto 0) := "1111111000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_CE : STD_LOGIC_VECTOR (11 downto 0) := "000011001110";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_bottom : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_right : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_top : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_left : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal t_V_reg_227 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_t_V_reg_227_pp0_it1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond_reg_772 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_67 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_772_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_93 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppstg_t_V_reg_227_pp0_it2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_106 : BOOLEAN;
    signal op2_assign_8_fu_328_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_8_reg_722 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_9_fu_338_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_9_reg_727 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_fu_344_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_reg_732 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_3_fu_350_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal op2_assign_3_reg_737 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_V_fu_381_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_reg_745 : STD_LOGIC_VECTOR (11 downto 0);
    signal not4_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not4_reg_750 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not5_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not5_reg_755 : STD_LOGIC_VECTOR (0 downto 0);
    signal bottom_6_fu_401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bottom_6_reg_760 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp3_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_767 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_772_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_772_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_772_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_416_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_V_reg_776 : STD_LOGIC_VECTOR (11 downto 0);
    signal not9_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not9_reg_781 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_not9_reg_781_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_not9_reg_781_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_787 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond1_reg_787_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond1_reg_787_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond1_reg_787_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_791 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_16_reg_791_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_16_reg_791_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_16_reg_791_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_797_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_806 : STD_LOGIC_VECTOR (0 downto 0);
    signal right_6_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_6_reg_811 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp9_demorgan_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_demorgan_reg_817 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_823 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_828 : STD_LOGIC_VECTOR (0 downto 0);
    signal bottom_1_fu_534_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bottom_1_reg_834 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_1_fu_557_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_1_reg_839 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_5_reg_215 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phibuf_t_V_5_reg_215 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal t_V_phi_fu_231_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_265_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_i_cast_fu_260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_i_fu_254_p2_temp: signed (13-1 downto 0);
    signal tmp_13_fu_303_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_i_cast_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_i_fu_292_p2_temp: signed (13-1 downto 0);
    signal top_1_fu_621_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_4_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_fu_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_1_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_fu_320_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bottom_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal top_2_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal top_fu_316_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_240_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_i_cast_fu_250_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_48_i_fu_254_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_12_fu_278_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_i_cast_fu_288_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_51_i_fu_292_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal retval_i_cast_fu_324_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal retval_i5_cast_fu_334_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_45_cast_fu_387_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_47_cast_fu_422_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal not6_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_demorgan_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bottom_3_fu_481_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bottom_4_fu_519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bottom_5_fu_526_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_3_fu_498_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_4_fu_542_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_5_fu_549_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_586_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal top_4_fu_590_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal top_5_cast_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_fu_607_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal left_3_fu_639_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_5_fu_646_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_6_fu_653_p3 : STD_LOGIC_VECTOR (31 downto 0);


begin



    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond1_fu_376_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_411_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_376_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = exitcond_fu_411_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_376_p2)) or ((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_411_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_376_p2))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_376_p2))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_376_p2))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_376_p2))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- bottom_fu_96 assign process. --
    bottom_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it2))) then 
                bottom_fu_96 <= bottom_1_fu_534_p3;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106))) then 
                bottom_fu_96 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- left_1_fu_92 assign process. --
    left_1_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it3))) then 
                left_1_fu_92 <= left_4_fu_660_p3;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106))) then 
                left_1_fu_92 <= left_fu_320_p1;
            end if; 
        end if;
    end process;

    -- p_bottom assign process. --
    p_bottom_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_787_pp0_it3)))) then 
                p_bottom <= bottom_1_reg_834;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106) and not((ap_const_lv1_0 = tmp_s_fu_244_p2)))) then 
                p_bottom <= tmp_48_i_cast_fu_260_p1;
            end if; 
        end if;
    end process;

    -- p_right assign process. --
    p_right_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_787_pp0_it3)))) then 
                p_right <= right_1_reg_839;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106) and not((ap_const_lv1_0 = tmp_3_fu_282_p2)))) then 
                p_right <= tmp_51_i_cast_fu_298_p1;
            end if; 
        end if;
    end process;

    -- right_fu_88 assign process. --
    right_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it2))) then 
                right_fu_88 <= right_1_fu_557_p3;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106))) then 
                right_fu_88 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- t_V_5_reg_215 assign process. --
    t_V_5_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_411_p2)) and (ap_ST_st2_fsm_1 = ap_NS_fsm))) then 
                t_V_5_reg_215 <= i_V_reg_745;
            elsif (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and (ap_ST_st2_fsm_1 = ap_NS_fsm))) then 
                t_V_5_reg_215 <= ap_reg_phibuf_t_V_5_reg_215;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106))) then 
                t_V_5_reg_215 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- t_V_reg_227 assign process. --
    t_V_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_376_p2))) then 
                t_V_reg_227 <= ap_const_lv12_0;
            elsif (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
                t_V_reg_227 <= j_V_reg_776;
            end if; 
        end if;
    end process;

    -- top_2_fu_100 assign process. --
    top_2_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it3))) then 
                top_2_fu_100 <= top_1_fu_621_p3;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106))) then 
                top_2_fu_100 <= top_fu_316_p1;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_411_p2)))) then
                ap_reg_phibuf_t_V_5_reg_215 <= i_V_reg_745;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                ap_reg_ppstg_exitcond_reg_772_pp0_it1 <= exitcond_reg_772;
                ap_reg_ppstg_exitcond_reg_772_pp0_it2 <= ap_reg_ppstg_exitcond_reg_772_pp0_it1;
                ap_reg_ppstg_exitcond_reg_772_pp0_it3 <= ap_reg_ppstg_exitcond_reg_772_pp0_it2;
                ap_reg_ppstg_exitcond_reg_772_pp0_it4 <= ap_reg_ppstg_exitcond_reg_772_pp0_it3;
                ap_reg_ppstg_not9_reg_781_pp0_it1 <= not9_reg_781;
                ap_reg_ppstg_not9_reg_781_pp0_it2 <= ap_reg_ppstg_not9_reg_781_pp0_it1;
                ap_reg_ppstg_or_cond1_reg_787_pp0_it1 <= or_cond1_reg_787;
                ap_reg_ppstg_or_cond1_reg_787_pp0_it2 <= ap_reg_ppstg_or_cond1_reg_787_pp0_it1;
                ap_reg_ppstg_or_cond1_reg_787_pp0_it3 <= ap_reg_ppstg_or_cond1_reg_787_pp0_it2;
                ap_reg_ppstg_or_cond_reg_797_pp0_it3 <= or_cond_reg_797;
                ap_reg_ppstg_t_V_reg_227_pp0_it1 <= t_V_reg_227;
                ap_reg_ppstg_t_V_reg_227_pp0_it2 <= ap_reg_ppstg_t_V_reg_227_pp0_it1;
                ap_reg_ppstg_tmp_16_reg_791_pp0_it2 <= tmp_16_reg_791;
                ap_reg_ppstg_tmp_16_reg_791_pp0_it3 <= ap_reg_ppstg_tmp_16_reg_791_pp0_it2;
                ap_reg_ppstg_tmp_16_reg_791_pp0_it4 <= ap_reg_ppstg_tmp_16_reg_791_pp0_it3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it2))) then
                bottom_1_reg_834 <= bottom_1_fu_534_p3;
                right_1_reg_839 <= right_1_fu_557_p3;
                right_6_reg_811(0) <= right_6_fu_488_p1(0);
    right_6_reg_811(1) <= right_6_fu_488_p1(1);
    right_6_reg_811(2) <= right_6_fu_488_p1(2);
    right_6_reg_811(3) <= right_6_fu_488_p1(3);
    right_6_reg_811(4) <= right_6_fu_488_p1(4);
    right_6_reg_811(5) <= right_6_fu_488_p1(5);
    right_6_reg_811(6) <= right_6_fu_488_p1(6);
    right_6_reg_811(7) <= right_6_fu_488_p1(7);
    right_6_reg_811(8) <= right_6_fu_488_p1(8);
    right_6_reg_811(9) <= right_6_fu_488_p1(9);
    right_6_reg_811(10) <= right_6_fu_488_p1(10);
    right_6_reg_811(11) <= right_6_fu_488_p1(11);
                sel_tmp2_reg_823 <= sel_tmp2_fu_510_p2;
                sel_tmp4_reg_828 <= sel_tmp4_fu_514_p2;
                sel_tmp9_demorgan_reg_817 <= sel_tmp9_demorgan_fu_506_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_376_p2))) then
                bottom_6_reg_760(0) <= bottom_6_fu_401_p1(0);
    bottom_6_reg_760(1) <= bottom_6_fu_401_p1(1);
    bottom_6_reg_760(2) <= bottom_6_fu_401_p1(2);
    bottom_6_reg_760(3) <= bottom_6_fu_401_p1(3);
    bottom_6_reg_760(4) <= bottom_6_fu_401_p1(4);
    bottom_6_reg_760(5) <= bottom_6_fu_401_p1(5);
    bottom_6_reg_760(6) <= bottom_6_fu_401_p1(6);
    bottom_6_reg_760(7) <= bottom_6_fu_401_p1(7);
    bottom_6_reg_760(8) <= bottom_6_fu_401_p1(8);
    bottom_6_reg_760(9) <= bottom_6_fu_401_p1(9);
    bottom_6_reg_760(10) <= bottom_6_fu_401_p1(10);
    bottom_6_reg_760(11) <= bottom_6_fu_401_p1(11);
                not4_reg_750 <= not4_fu_391_p2;
                not5_reg_755 <= not5_fu_396_p2;
                sel_tmp3_reg_767 <= sel_tmp3_fu_405_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                exitcond_reg_772 <= exitcond_fu_411_p2;
                j_V_reg_776 <= j_V_fu_416_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106) and not((ap_const_lv1_0 = tmp_s_fu_244_p2)))) then
                guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns <= tmp_11_fu_265_p5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106) and not((ap_const_lv1_0 = tmp_3_fu_282_p2)))) then
                guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns_1 <= tmp_13_fu_303_p5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_V_reg_745 <= i_V_fu_381_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = exitcond_fu_411_p2))) then
                not9_reg_781 <= not9_fu_426_p2;
                or_cond1_reg_787 <= or_cond1_fu_436_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_106))) then
                op2_assign_3_reg_737 <= op2_assign_3_fu_350_p2;
                op2_assign_8_reg_722 <= op2_assign_8_fu_328_p2;
                op2_assign_9_reg_727 <= op2_assign_9_fu_338_p2;
                op2_assign_reg_732 <= op2_assign_fu_344_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it1))) then
                or_cond_reg_797 <= or_cond_fu_452_p2;
                sel_tmp1_reg_806 <= sel_tmp1_fu_464_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond1_reg_787_pp0_it3)))) then
                p_left <= left_4_fu_660_p3;
                p_top <= top_1_fu_621_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                tmp_16_reg_791 <= src_data_stream_0_V_dout;
            end if;
        end if;
    end process;
    bottom_6_reg_760(31 downto 12) <= "00000000000000000000";
    right_6_reg_811(31 downto 12) <= "00000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm , ap_reg_ppiten_pp0_it0 , ap_sig_bdd_67 , ap_reg_ppiten_pp0_it1 , ap_reg_ppiten_pp0_it4 , ap_sig_bdd_93 , ap_reg_ppiten_pp0_it5 , ap_sig_bdd_106 , exitcond1_fu_376_p2 , exitcond_fu_411_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_106)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_376_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_411_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_411_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm, exitcond1_fu_376_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond1_fu_376_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond1_fu_376_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond1_fu_376_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_106 assign process. --
    ap_sig_bdd_106_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_106 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_67 assign process. --
    ap_sig_bdd_67_assign_proc : process(src_data_stream_0_V_empty_n, exitcond_reg_772)
    begin
                ap_sig_bdd_67 <= ((src_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond_reg_772 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_93 assign process. --
    ap_sig_bdd_93_assign_proc : process(dst_data_stream_0_V_full_n, bb_top_V_full_n, bb_bottom_V_full_n, bb_left_V_full_n, bb_right_V_full_n, ap_reg_ppstg_exitcond_reg_772_pp0_it4)
    begin
                ap_sig_bdd_93 <= (((bb_top_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (bb_bottom_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (bb_left_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (bb_right_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (dst_data_stream_0_V_full_n = ap_const_logic_0)));
    end process;

    bb_bottom_V_din <= p_bottom;

    -- bb_bottom_V_write assign process. --
    bb_bottom_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_67, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_772_pp0_it4, ap_sig_bdd_93, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            bb_bottom_V_write <= ap_const_logic_1;
        else 
            bb_bottom_V_write <= ap_const_logic_0;
        end if; 
    end process;

    bb_left_V_din <= p_left;

    -- bb_left_V_write assign process. --
    bb_left_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_67, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_772_pp0_it4, ap_sig_bdd_93, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            bb_left_V_write <= ap_const_logic_1;
        else 
            bb_left_V_write <= ap_const_logic_0;
        end if; 
    end process;

    bb_right_V_din <= p_right;

    -- bb_right_V_write assign process. --
    bb_right_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_67, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_772_pp0_it4, ap_sig_bdd_93, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            bb_right_V_write <= ap_const_logic_1;
        else 
            bb_right_V_write <= ap_const_logic_0;
        end if; 
    end process;

    bb_top_V_din <= p_top;

    -- bb_top_V_write assign process. --
    bb_top_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_67, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_772_pp0_it4, ap_sig_bdd_93, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            bb_top_V_write <= ap_const_logic_1;
        else 
            bb_top_V_write <= ap_const_logic_0;
        end if; 
    end process;

    bottom_1_fu_534_p3 <= 
        bottom_fu_96 when (sel_tmp4_fu_514_p2(0) = '1') else 
        bottom_5_fu_526_p3;
    bottom_3_fu_481_p3 <= 
        bottom_6_reg_760 when (tmp_5_fu_476_p2(0) = '1') else 
        bottom_fu_96;
    bottom_4_fu_519_p3 <= 
        bottom_fu_96 when (or_cond_reg_797(0) = '1') else 
        bottom_3_fu_481_p3;
    bottom_5_fu_526_p3 <= 
        bottom_4_fu_519_p3 when (sel_tmp9_demorgan_fu_506_p2(0) = '1') else 
        bottom_fu_96;
    bottom_6_fu_401_p1 <= std_logic_vector(resize(unsigned(t_V_5_reg_215),32));
    dst_data_stream_0_V_din <= ap_reg_ppstg_tmp_16_reg_791_pp0_it4;

    -- dst_data_stream_0_V_write assign process. --
    dst_data_stream_0_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_67, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_reg_772_pp0_it4, ap_sig_bdd_93, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_772_pp0_it4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_376_p2 <= "1" when (t_V_5_reg_215 = src_rows_V_read) else "0";
    exitcond_fu_411_p2 <= "1" when (t_V_phi_fu_231_p4 = src_cols_V_read) else "0";
    i_V_fu_381_p2 <= std_logic_vector(unsigned(t_V_5_reg_215) + unsigned(ap_const_lv12_1));
    j_V_fu_416_p2 <= std_logic_vector(unsigned(t_V_phi_fu_231_p4) + unsigned(ap_const_lv12_1));
    left_3_fu_639_p3 <= 
        right_6_reg_811 when (sel_tmp8_fu_634_p2(0) = '1') else 
        left_1_fu_92;
    left_4_fu_660_p3 <= 
        left_1_fu_92 when (sel_tmp4_reg_828(0) = '1') else 
        left_6_fu_653_p3;
    left_5_fu_646_p3 <= 
        left_1_fu_92 when (ap_reg_ppstg_or_cond_reg_797_pp0_it3(0) = '1') else 
        left_3_fu_639_p3;
    left_6_fu_653_p3 <= 
        left_5_fu_646_p3 when (sel_tmp9_demorgan_reg_817(0) = '1') else 
        left_1_fu_92;
    left_fu_320_p1 <= std_logic_vector(resize(unsigned(src_cols_V_read),32));
    not4_fu_391_p2 <= "1" when (tmp_45_cast_fu_387_p1 = op2_assign_8_reg_722) else "0";
    not5_fu_396_p2 <= "1" when (unsigned(tmp_45_cast_fu_387_p1) < unsigned(op2_assign_3_reg_737)) else "0";
    not6_fu_431_p2 <= "1" when (tmp_47_cast_fu_422_p1 = op2_assign_9_reg_727) else "0";
    not9_fu_426_p2 <= "1" when (unsigned(tmp_47_cast_fu_422_p1) < unsigned(op2_assign_reg_732)) else "0";
    not_fu_446_p2 <= "1" when (unsigned(ap_reg_ppstg_t_V_reg_227_pp0_it1) < unsigned(ap_const_lv12_CE)) else "0";
    op2_assign_3_fu_350_p2 <= std_logic_vector(unsigned(retval_i_cast_fu_324_p1) + unsigned(ap_const_lv13_1FC0));
    op2_assign_8_fu_328_p2 <= std_logic_vector(unsigned(retval_i_cast_fu_324_p1) + unsigned(ap_const_lv13_1FFF));
    op2_assign_9_fu_338_p2 <= std_logic_vector(unsigned(retval_i5_cast_fu_334_p1) + unsigned(ap_const_lv13_1FFF));
    op2_assign_fu_344_p2 <= std_logic_vector(unsigned(retval_i5_cast_fu_334_p1) + unsigned(ap_const_lv13_1F33));
    or_cond1_fu_436_p2 <= (not4_reg_750 and not6_fu_431_p2);
    or_cond_fu_452_p2 <= (p_not_fu_441_p2 or not_fu_446_p2);
    p_not_fu_441_p2 <= "0" when (tmp_16_reg_791 = ap_const_lv8_0) else "1";
    retval_i5_cast_fu_334_p1 <= std_logic_vector(resize(unsigned(src_cols_V_read),13));
    retval_i_cast_fu_324_p1 <= std_logic_vector(resize(unsigned(src_rows_V_read),13));
    right_1_fu_557_p3 <= 
        right_fu_88 when (sel_tmp4_fu_514_p2(0) = '1') else 
        right_5_fu_549_p3;
    right_3_fu_498_p3 <= 
        right_6_fu_488_p1 when (tmp_7_fu_492_p2(0) = '1') else 
        right_fu_88;
    right_4_fu_542_p3 <= 
        right_fu_88 when (or_cond_reg_797(0) = '1') else 
        right_3_fu_498_p3;
    right_5_fu_549_p3 <= 
        right_4_fu_542_p3 when (sel_tmp9_demorgan_fu_506_p2(0) = '1') else 
        right_fu_88;
    right_6_fu_488_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_t_V_reg_227_pp0_it2),32));
    sel_tmp1_demorgan_fu_458_p2 <= (p_not_fu_441_p2 or not_fu_446_p2);
    sel_tmp1_fu_464_p2 <= (sel_tmp1_demorgan_fu_458_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_510_p2 <= (ap_reg_ppstg_not9_reg_781_pp0_it2 and sel_tmp1_reg_806);
    sel_tmp3_fu_405_p2 <= (not5_fu_396_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_514_p2 <= (sel_tmp2_fu_510_p2 and sel_tmp3_reg_767);
    sel_tmp6_fu_607_p3 <= 
        top_2_fu_100 when (ap_reg_ppstg_or_cond_reg_797_pp0_it3(0) = '1') else 
        top_5_cast_fu_598_p1;
    sel_tmp8_fu_634_p2 <= (tmp2_fu_629_p2 and sel_tmp2_reg_823);
    sel_tmp9_demorgan_fu_506_p2 <= (or_cond_reg_797 or ap_reg_ppstg_not9_reg_781_pp0_it2);
    sel_tmp_fu_614_p3 <= 
        sel_tmp6_fu_607_p3 when (sel_tmp9_demorgan_reg_817(0) = '1') else 
        top_2_fu_100;

    -- src_data_stream_0_V_read assign process. --
    src_data_stream_0_V_read_assign_proc : process(ap_CS_fsm, exitcond_reg_772, ap_sig_bdd_67, ap_reg_ppiten_pp0_it1, ap_sig_bdd_93, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_67 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_93 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- t_V_phi_fu_231_p4 assign process. --
    t_V_phi_fu_231_p4_assign_proc : process(ap_CS_fsm, t_V_reg_227, exitcond_reg_772, ap_reg_ppiten_pp0_it1, j_V_reg_776)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond_reg_772 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            t_V_phi_fu_231_p4 <= j_V_reg_776;
        else 
            t_V_phi_fu_231_p4 <= t_V_reg_227;
        end if; 
    end process;

    tmp2_fu_629_p2 <= (not5_reg_755 and tmp_8_fu_602_p2);
    tmp_11_fu_265_p5 <= (guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns(63 downto 8) & ap_const_lv8_1);
    tmp_12_fu_278_p1 <= guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns_1(8 - 1 downto 0);
    tmp_13_fu_303_p5 <= (guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns_1(63 downto 8) & ap_const_lv8_1);
    tmp_15_fu_586_p1 <= top_2_fu_100(12 - 1 downto 0);
    tmp_3_fu_282_p2 <= "1" when (tmp_12_fu_278_p1 = ap_const_lv8_0) else "0";
    tmp_45_cast_fu_387_p1 <= std_logic_vector(resize(unsigned(t_V_5_reg_215),13));
    tmp_47_cast_fu_422_p1 <= std_logic_vector(resize(unsigned(t_V_phi_fu_231_p4),13));
    tmp_47_i_cast_fu_250_p1 <= std_logic_vector(resize(unsigned(src_rows_V_read),13));
    
    tmp_48_i_fu_254_p2_temp <= signed(tmp_48_i_fu_254_p2);
    tmp_48_i_cast_fu_260_p1 <= std_logic_vector(resize(tmp_48_i_fu_254_p2_temp,32));

    tmp_48_i_fu_254_p2 <= std_logic_vector(unsigned(tmp_47_i_cast_fu_250_p1) + unsigned(ap_const_lv13_1FFF));
    tmp_50_i_cast_fu_288_p1 <= std_logic_vector(resize(unsigned(src_cols_V_read),13));
    
    tmp_51_i_fu_292_p2_temp <= signed(tmp_51_i_fu_292_p2);
    tmp_51_i_cast_fu_298_p1 <= std_logic_vector(resize(tmp_51_i_fu_292_p2_temp,32));

    tmp_51_i_fu_292_p2 <= std_logic_vector(unsigned(tmp_50_i_cast_fu_288_p1) + unsigned(ap_const_lv13_1FFF));
    tmp_5_fu_476_p2 <= "1" when (unsigned(bottom_6_reg_760) > unsigned(bottom_fu_96)) else "0";
    tmp_6_fu_581_p2 <= "1" when (unsigned(bottom_6_reg_760) < unsigned(top_2_fu_100)) else "0";
    tmp_7_fu_492_p2 <= "1" when (unsigned(right_6_fu_488_p1) > unsigned(right_fu_88)) else "0";
    tmp_8_fu_602_p2 <= "1" when (unsigned(right_6_reg_811) < unsigned(left_1_fu_92)) else "0";
    tmp_fu_240_p1 <= guard_variable_for_bounding_box_Mat_1080_1920_0_Mat_1080_1920_0_stream_unsigned_int_stream_uns(8 - 1 downto 0);
    tmp_s_fu_244_p2 <= "1" when (tmp_fu_240_p1 = ap_const_lv8_0) else "0";
    top_1_fu_621_p3 <= 
        top_2_fu_100 when (sel_tmp4_reg_828(0) = '1') else 
        sel_tmp_fu_614_p3;
    top_4_fu_590_p3 <= 
        t_V_5_reg_215 when (tmp_6_fu_581_p2(0) = '1') else 
        tmp_15_fu_586_p1;
    top_5_cast_fu_598_p1 <= std_logic_vector(resize(unsigned(top_4_fu_590_p3),32));
    top_fu_316_p1 <= std_logic_vector(resize(unsigned(src_rows_V_read),32));
end behav;
