

================================================================
== Vivado HLS Report for 'compute'
================================================================
* Date:           Tue Dec  6 11:23:21 2016

* Version:        2013.2 (build date: Thu Jun 13 16:07:59 PM 2013)
* Project:        prj
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   6.67|      7.90|        0.83|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|        66|          1|          1|     ?|    yes   |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
|ShiftMemory      |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Shift register: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 66


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 68
* Pipeline: 1
  Pipeline-0: II = 1, D = 66, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
3 --> 
	2  / (exitcond)
	4  / (!exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	3  / true
* FSM state operations: 

 <State 1>: 1.84ns
ST_1: error [1/1] 0.00ns
entry:0  %error = alloca i32                             ; <i32*> [#uses=4]

ST_1: yy [1/1] 0.00ns
entry:1  %yy = alloca i32                                ; <i32*> [#uses=4]

ST_1: xx [1/1] 0.00ns
entry:2  %xx = alloca i32                                ; <i32*> [#uses=4]

ST_1: empty [1/1] 0.00ns
entry:3  %empty = call i32 (...)* @_ssdm_op_SpecFifo(i8* %out_data_stream_0_V, [8 x i8]* @str145, i32 0, i32 0, i32 0, [8 x i8]* @str145) ; <i32> [#uses=0]

ST_1: empty_133 [1/1] 0.00ns
entry:4  %empty_133 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %src_data_stream_0_V, [8 x i8]* @str142, i32 0, i32 0, i32 0, [8 x i8]* @str142) ; <i32> [#uses=0]

ST_1: empty_134 [1/1] 0.00ns
entry:5  %empty_134 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %bb_right2_V, [8 x i8]* @str96, i32 0, i32 0, i32 0, [8 x i8]* @str96) ; <i32> [#uses=0]

ST_1: empty_135 [1/1] 0.00ns
entry:6  %empty_135 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %bb_left2_V, [8 x i8]* @str93, i32 0, i32 0, i32 0, [8 x i8]* @str93) ; <i32> [#uses=0]

ST_1: empty_136 [1/1] 0.00ns
entry:7  %empty_136 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %bb_bottom2_V, [8 x i8]* @str90, i32 0, i32 0, i32 0, [8 x i8]* @str90) ; <i32> [#uses=0]

ST_1: empty_137 [1/1] 0.00ns
entry:8  %empty_137 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %bb_top2_V, [8 x i8]* @str87, i32 0, i32 0, i32 0, [8 x i8]* @str87) ; <i32> [#uses=0]

ST_1: empty_138 [1/1] 0.00ns
entry:9  %empty_138 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %bb_right_V, [8 x i8]* @str84, i32 0, i32 0, i32 0, [8 x i8]* @str84) ; <i32> [#uses=0]

ST_1: empty_139 [1/1] 0.00ns
entry:10  %empty_139 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %bb_left_V, [8 x i8]* @str81, i32 0, i32 0, i32 0, [8 x i8]* @str81) ; <i32> [#uses=0]

ST_1: empty_140 [1/1] 0.00ns
entry:11  %empty_140 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %bb_bottom_V, [8 x i8]* @str78, i32 0, i32 0, i32 0, [8 x i8]* @str78) ; <i32> [#uses=0]

ST_1: empty_141 [1/1] 0.00ns
entry:12  %empty_141 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %bb_top_V, [8 x i8]* @str75, i32 0, i32 0, i32 0, [8 x i8]* @str75) ; <i32> [#uses=0]

ST_1: empty_142 [1/1] 0.00ns
entry:13  %empty_142 = call i32 (...)* @_ssdm_op_SpecFifo(i1* %val_V_V, [8 x i8]* @str72, i32 0, i32 0, i32 0, [8 x i8]* @str72) ; <i32> [#uses=0]

ST_1: empty_143 [1/1] 0.00ns
entry:14  %empty_143 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %err_V, [8 x i8]* @str69, i32 0, i32 0, i32 0, [8 x i8]* @str69) ; <i32> [#uses=0]

ST_1: src_cols_V_read_3 [1/1] 0.00ns
entry:15  %src_cols_V_read_3 = call i12 @_ssdm_op_WireRead.i12(i12 %src_cols_V_read) ; <i12> [#uses=2]

ST_1: src_rows_V_read_3 [1/1] 0.00ns
entry:16  %src_rows_V_read_3 = call i12 @_ssdm_op_WireRead.i12(i12 %src_rows_V_read) ; <i12> [#uses=2]

ST_1: retval_i_cast [1/1] 0.00ns
entry:17  %retval_i_cast = zext i12 %src_rows_V_read_3 to i13 ; <i13> [#uses=1]

ST_1: op2_assign [1/1] 1.84ns
entry:18  %op2_assign = add i13 %retval_i_cast, -1        ; <i13> [#uses=1]

ST_1: retval_i2_cast [1/1] 0.00ns
entry:19  %retval_i2_cast = zext i12 %src_cols_V_read_3 to i13 ; <i13> [#uses=1]

ST_1: op2_assign_s [1/1] 1.84ns
entry:20  %op2_assign_s = add i13 %retval_i2_cast, -1     ; <i13> [#uses=1]

ST_1: stg_90 [1/1] 1.57ns
entry:21  store i32 0, i32* %xx

ST_1: stg_91 [1/1] 1.57ns
entry:22  store i32 0, i32* %yy

ST_1: stg_92 [1/1] 1.57ns
entry:23  store i32 0, i32* %error

ST_1: stg_93 [1/1] 1.39ns
entry:24  br label %bb43


 <State 2>: 2.18ns
ST_2: t_V_6 [1/1] 0.00ns
bb43:0  %t_V_6 = phi i12 [ 0, %entry ], [ %i_V, %bb40 ] ; <i12> [#uses=5]

ST_2: exitcond4 [1/1] 2.14ns
bb43:1  %exitcond4 = icmp eq i12 %t_V_6, %src_rows_V_read_3 ; <i1> [#uses=1]

ST_2: i_V [1/1] 1.84ns
bb43:2  %i_V = add i12 %t_V_6, 1                        ; <i12> [#uses=1]

ST_2: stg_97 [1/1] 0.00ns
bb43:3  br i1 %exitcond4, label %return, label %bb40.preheader

ST_2: tmp_s [1/1] 0.00ns
bb40.preheader:0  %tmp_s = zext i12 %t_V_6 to i32                 ; <i32> [#uses=2]

ST_2: tmp_24_cast5 [1/1] 0.00ns
bb40.preheader:1  %tmp_24_cast5 = zext i12 %t_V_6 to i13          ; <i13> [#uses=1]

ST_2: tmp_24_cast [1/1] 0.00ns
bb40.preheader:2  %tmp_24_cast = zext i12 %t_V_6 to i26           ; <i26> [#uses=1]

ST_2: not1 [1/1] 2.18ns
bb40.preheader:3  %not1 = icmp eq i13 %tmp_24_cast5, %op2_assign  ; <i1> [#uses=1]

ST_2: stg_102 [1/1] 1.39ns
bb40.preheader:4  br label %bb40

ST_2: stg_103 [1/1] 0.00ns
return:0  ret void


 <State 3>: 2.14ns
ST_3: t_V [1/1] 0.00ns
bb40:0  %t_V = phi i12 [ %j_V, %bb31_ifconv ], [ 0, %bb40.preheader ] ; <i12> [#uses=5]

ST_3: exitcond [1/1] 2.14ns
bb40:1  %exitcond = icmp eq i12 %t_V, %src_cols_V_read_3 ; <i1> [#uses=1]

ST_3: j_V [1/1] 1.84ns
bb40:2  %j_V = add i12 %t_V, 1                          ; <i12> [#uses=1]

ST_3: stg_107 [1/1] 0.00ns
bb40:3  br i1 %exitcond, label %bb43, label %bb1


 <State 4>: 3.58ns
ST_4: tmp_24 [1/1] 1.70ns
bb1:2  %tmp_24 = call i8 @_ssdm_op_FifoRead.volatile.i8P(i8* %src_data_stream_0_V) ; <i8> [#uses=2]

ST_4: tmp_25 [1/1] 1.86ns
bb1:3  %tmp_25 = call i32 @_ssdm_op_FifoRead.volatile.i32P(i32* %bb_top_V) ; <i32> [#uses=4]

ST_4: tmp_17 [1/1] 0.00ns
bb1:4  %tmp_17 = trunc i32 %tmp_25 to i6               ; <i6> [#uses=1]

ST_4: tmp_26 [1/1] 1.86ns
bb1:5  %tmp_26 = call i32 @_ssdm_op_FifoRead.volatile.i32P(i32* %bb_bottom_V) ; <i32> [#uses=2]

ST_4: tmp_18 [1/1] 0.00ns
bb1:6  %tmp_18 = trunc i32 %tmp_26 to i6               ; <i6> [#uses=1]

ST_4: tmp_27 [1/1] 1.86ns
bb1:7  %tmp_27 = call i32 @_ssdm_op_FifoRead.volatile.i32P(i32* %bb_left_V) ; <i32> [#uses=4]

ST_4: tmp_19 [1/1] 0.00ns
bb1:8  %tmp_19 = trunc i32 %tmp_27 to i6               ; <i6> [#uses=1]

ST_4: tmp_28 [1/1] 1.86ns
bb1:9  %tmp_28 = call i32 @_ssdm_op_FifoRead.volatile.i32P(i32* %bb_right_V) ; <i32> [#uses=2]

ST_4: tmp_20 [1/1] 0.00ns
bb1:10  %tmp_20 = trunc i32 %tmp_28 to i6               ; <i6> [#uses=1]

ST_4: tmp_1 [1/1] 1.72ns
bb1:11  %tmp_1 = sub i6 %tmp_20, %tmp_19                ; <i6> [#uses=1]

ST_4: tmp_3 [1/1] 1.72ns
bb1:15  %tmp_3 = sub i6 %tmp_18, %tmp_17                ; <i6> [#uses=1]


 <State 5>: 4.88ns
ST_5: tmp_26_cast [1/1] 0.00ns
bb1:12  %tmp_26_cast = zext i6 %tmp_1 to i32            ; <i32> [#uses=1]

ST_5: tmp_2 [1/1] 2.44ns
bb1:13  %tmp_2 = sub i32 %tmp_28, %tmp_26_cast          ; <i32> [#uses=1]

ST_5: right_1 [1/1] 2.44ns
bb1:14  %right_1 = add i32 %tmp_2, 64                   ; <i32> [#uses=3]

ST_5: tmp_29_cast [1/1] 0.00ns
bb1:16  %tmp_29_cast = zext i6 %tmp_3 to i32            ; <i32> [#uses=1]

ST_5: tmp_4 [1/1] 2.44ns
bb1:17  %tmp_4 = sub i32 %tmp_26, %tmp_29_cast          ; <i32> [#uses=1]

ST_5: bottom_1 [1/1] 2.44ns
bb1:18  %bottom_1 = add i32 %tmp_4, 64                  ; <i32> [#uses=3]


 <State 6>: 5.26ns
ST_6: tmp_6 [1/1] 2.44ns
bb1:21  %tmp_6 = sub i32 %bottom_1, %tmp_25             ; <i32> [#uses=1]

ST_6: sc_y [1/1] 0.00ns
bb1:22  %sc_y = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %tmp_6, i32 6, i32 31) ; <i26> [#uses=1]

ST_6: not [1/1] 2.52ns
bb1:23  %not = icmp ult i32 %tmp_s, %tmp_25             ; <i1> [#uses=1]

ST_6: stg_128 [1/1] 0.00ns
bb1:24  br i1 %not, label %bb31_ifconv, label %bb3

ST_6: tmp_7 [1/1] 0.00ns
bb3:0  %tmp_7 = zext i12 %t_V to i32                   ; <i32> [#uses=2]

ST_6: ult [1/1] 2.52ns
bb3:1  %ult = icmp ult i32 %tmp_7, %tmp_27             ; <i1> [#uses=1]

ST_6: rev [1/1] 1.37ns
bb3:2  %rev = xor i1 %ult, true                        ; <i1> [#uses=1]

ST_6: not7 [1/1] 2.52ns
bb3:3  %not7 = icmp ult i32 %tmp_s, %bottom_1          ; <i1> [#uses=1]

ST_6: not2 [1/1] 2.52ns
bb3:4  %not2 = icmp ult i32 %tmp_7, %right_1           ; <i1> [#uses=1]

ST_6: tmp2 [1/1] 1.37ns
bb3:5  %tmp2 = and i1 %not7, %not2                     ; <i1> [#uses=1]

ST_6: or_cond9 [1/1] 1.37ns
bb3:6  %or_cond9 = and i1 %tmp2, %rev                  ; <i1> [#uses=1]

ST_6: stg_136 [1/1] 0.00ns
bb3:7  br i1 %or_cond9, label %bb12, label %bb31_ifconv


 <State 7>: 4.34ns
ST_7: tmp_8 [29/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 8>: 4.34ns
ST_8: tmp_8 [28/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 9>: 4.34ns
ST_9: tmp_8 [27/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 10>: 4.34ns
ST_10: tmp_8 [26/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 11>: 4.34ns
ST_11: tmp_8 [25/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 12>: 4.34ns
ST_12: tmp_8 [24/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 13>: 4.34ns
ST_13: tmp_8 [23/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 14>: 4.34ns
ST_14: tmp_8 [22/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 15>: 4.34ns
ST_15: tmp_8 [21/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 16>: 4.34ns
ST_16: tmp_8 [20/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 17>: 4.34ns
ST_17: tmp_8 [19/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 18>: 4.34ns
ST_18: tmp_8 [18/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 19>: 4.34ns
ST_19: tmp_8 [17/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 20>: 4.34ns
ST_20: tmp_8 [16/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 21>: 4.34ns
ST_21: tmp_8 [15/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 22>: 4.34ns
ST_22: tmp_8 [14/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 23>: 4.34ns
ST_23: tmp_8 [13/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 24>: 4.34ns
ST_24: tmp_8 [12/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 25>: 4.34ns
ST_25: tmp_8 [11/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 26>: 4.34ns
ST_26: tmp_8 [10/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 27>: 4.34ns
ST_27: tmp_8 [9/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 28>: 4.34ns
ST_28: tmp_8 [8/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 29>: 4.34ns
ST_29: tmp_8 [7/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 30>: 4.34ns
ST_30: tmp_8 [6/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 31>: 4.34ns
ST_31: tmp_8 [5/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 32>: 4.34ns
ST_32: tmp_8 [4/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 33>: 4.34ns
ST_33: tmp_8 [3/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 34>: 4.34ns
ST_34: tmp_8 [2/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]


 <State 35>: 4.34ns
ST_35: tmp_9 [1/1] 0.00ns
bb1:0  %tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str79) ; <i32> [#uses=1]

ST_35: stg_166 [1/1] 0.00ns
bb1:1  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, [1 x i8]* @p_str62) nounwind

ST_35: tmp_5 [1/1] 2.44ns
bb1:19  %tmp_5 = sub i32 %right_1, %tmp_27              ; <i32> [#uses=1]

ST_35: sc_x [1/1] 0.00ns
bb1:20  %sc_x = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %tmp_5, i32 6, i32 31) ; <i26> [#uses=1]

ST_35: tmp_8 [1/29] 4.34ns
bb12:0  %tmp_8 = urem i26 %tmp_24_cast, %sc_y           ; <i26> [#uses=1]

ST_35: tmp [1/1] 0.00ns
bb12:1  %tmp = trunc i26 %tmp_8 to i13                  ; <i13> [#uses=1]


 <State 36>: 4.34ns
ST_36: tmp_10 [1/1] 2.18ns
bb12:2  %tmp_10 = icmp eq i13 %tmp, 0                   ; <i1> [#uses=1]

ST_36: stg_172 [1/1] 0.00ns
bb12:3  br i1 %tmp_10, label %bb13, label %bb31_ifconv

ST_36: retval_i3_cast [1/1] 0.00ns
bb13:0  %retval_i3_cast = zext i12 %t_V to i26          ; <i26> [#uses=1]

ST_36: tmp_11 [29/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]

ST_36: tmp_43_cast [1/1] 0.00ns
bb31_ifconv:1  %tmp_43_cast = zext i12 %t_V to i13             ; <i13> [#uses=1]

ST_36: not3 [1/1] 2.18ns
bb31_ifconv:2  %not3 = icmp eq i13 %tmp_43_cast, %op2_assign_s ; <i1> [#uses=1]

ST_36: sel_tmp [1/1] 1.37ns
bb31_ifconv:3  %sel_tmp = and i1 %not1, %not3                  ; <i1> [#uses=1]


 <State 37>: 4.34ns
ST_37: tmp_11 [28/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 38>: 4.34ns
ST_38: tmp_11 [27/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 39>: 4.34ns
ST_39: tmp_11 [26/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 40>: 4.34ns
ST_40: tmp_11 [25/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 41>: 4.34ns
ST_41: tmp_11 [24/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 42>: 4.34ns
ST_42: tmp_11 [23/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 43>: 4.34ns
ST_43: tmp_11 [22/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 44>: 4.34ns
ST_44: tmp_11 [21/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 45>: 4.34ns
ST_45: tmp_11 [20/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 46>: 4.34ns
ST_46: tmp_11 [19/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 47>: 4.34ns
ST_47: tmp_11 [18/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 48>: 4.34ns
ST_48: tmp_11 [17/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 49>: 4.34ns
ST_49: tmp_11 [16/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 50>: 4.34ns
ST_50: tmp_11 [15/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 51>: 4.34ns
ST_51: tmp_11 [14/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 52>: 4.34ns
ST_52: tmp_11 [13/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 53>: 4.34ns
ST_53: tmp_11 [12/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 54>: 4.34ns
ST_54: tmp_11 [11/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 55>: 4.34ns
ST_55: tmp_11 [10/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 56>: 4.34ns
ST_56: tmp_11 [9/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 57>: 4.34ns
ST_57: tmp_11 [8/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 58>: 4.34ns
ST_58: tmp_11 [7/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 59>: 4.34ns
ST_59: tmp_11 [6/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 60>: 4.34ns
ST_60: tmp_11 [5/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 61>: 4.34ns
ST_61: tmp_11 [4/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 62>: 4.34ns
ST_62: tmp_11 [3/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 63>: 4.34ns
ST_63: tmp_11 [2/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]


 <State 64>: 4.34ns
ST_64: tmp_11 [1/29] 4.34ns
bb13:1  %tmp_11 = urem i26 %retval_i3_cast, %sc_x       ; <i26> [#uses=1]

ST_64: tmp_21 [1/1] 0.00ns
bb13:2  %tmp_21 = trunc i26 %tmp_11 to i13              ; <i13> [#uses=1]


 <State 65>: 7.90ns
ST_65: tmp_12 [1/1] 2.18ns
bb13:3  %tmp_12 = icmp eq i13 %tmp_21, 0                ; <i1> [#uses=1]

ST_65: stg_208 [1/1] 0.00ns
bb13:4  br i1 %tmp_12, label %bb17, label %bb31_ifconv

ST_65: xx_load_1 [1/1] 0.00ns
bb17:1  %xx_load_1 = load i32* %xx                      ; <i32> [#uses=1]

ST_65: xx_load [1/1] 0.00ns
bb1777:3  %xx_load = load i32* %xx                        ; <i32> [#uses=1]

ST_65: xx_1 [1/1] 2.44ns
bb1777:9  %xx_1 = add nsw i32 %xx_load, 1                 ; <i32> [#uses=2]

ST_65: tmp_14 [1/1] 2.52ns
bb1777:11  %tmp_14 = icmp eq i32 %xx_1, 64                 ; <i1> [#uses=2]

ST_65: xx_2 [1/1] 1.37ns
bb1777:13  %xx_2 = select i1 %tmp_14, i32 0, i32 %xx_1     ; <i32> [#uses=1]

ST_65: stg_214 [1/1] 1.57ns
bb1777:14  store i32 %xx_2, i32* %xx


 <State 66>: 5.38ns
ST_66: yy_load_1 [1/1] 0.00ns
bb17:0  %yy_load_1 = load i32* %yy                      ; <i32> [#uses=1]

ST_66: index_assign [1/1] 2.44ns
bb17:2  %index_assign = sub nsw i32 63, %xx_load_1      ; <i32> [#uses=1]

ST_66: tmp_22 [1/1] 0.00ns
bb17:3  %tmp_22 = trunc i32 %yy_load_1 to i6            ; <i6> [#uses=1]

ST_66: stg_218 [1/1] 3.18ns
bb17:4  switch i6 %tmp_22, label %branch63 [
    i6 0, label %bb1777
    i6 1, label %branch1
    i6 2, label %branch2
    i6 3, label %branch3
    i6 4, label %branch4
    i6 5, label %branch5
    i6 6, label %branch6
    i6 7, label %branch7
    i6 8, label %branch8
    i6 9, label %branch9
    i6 10, label %branch10
    i6 11, label %branch11
    i6 12, label %branch12
    i6 13, label %branch13
    i6 14, label %branch14
    i6 15, label %branch15
    i6 16, label %branch16
    i6 17, label %branch17
    i6 18, label %branch18
    i6 19, label %branch19
    i6 20, label %branch20
    i6 21, label %branch21
    i6 22, label %branch22
    i6 23, label %branch23
    i6 24, label %branch24
    i6 25, label %branch25
    i6 26, label %branch26
    i6 27, label %branch27
    i6 28, label %branch28
    i6 29, label %branch29
    i6 30, label %branch30
    i6 31, label %branch31
    i6 -32, label %branch32
    i6 -31, label %branch33
    i6 -30, label %branch34
    i6 -29, label %branch35
    i6 -28, label %branch36
    i6 -27, label %branch37
    i6 -26, label %branch38
    i6 -25, label %branch39
    i6 -24, label %branch40
    i6 -23, label %branch41
    i6 -22, label %branch42
    i6 -21, label %branch43
    i6 -20, label %branch44
    i6 -19, label %branch45
    i6 -18, label %branch46
    i6 -17, label %branch47
    i6 -16, label %branch48
    i6 -15, label %branch49
    i6 -14, label %branch50
    i6 -13, label %branch51
    i6 -12, label %branch52
    i6 -11, label %branch53
    i6 -10, label %branch54
    i6 -9, label %branch55
    i6 -8, label %branch56
    i6 -7, label %branch57
    i6 -6, label %branch58
    i6 -5, label %branch59
    i6 -4, label %branch60
    i6 -3, label %branch61
    i6 -2, label %branch62
  ]

ST_66: stg_219 [1/1] 3.18ns
branch62:0  br label %bb1777

ST_66: stg_220 [1/1] 3.18ns
branch61:0  br label %bb1777

ST_66: stg_221 [1/1] 3.18ns
branch60:0  br label %bb1777

ST_66: stg_222 [1/1] 3.18ns
branch59:0  br label %bb1777

ST_66: stg_223 [1/1] 3.18ns
branch58:0  br label %bb1777

ST_66: stg_224 [1/1] 3.18ns
branch57:0  br label %bb1777

ST_66: stg_225 [1/1] 3.18ns
branch56:0  br label %bb1777

ST_66: stg_226 [1/1] 3.18ns
branch55:0  br label %bb1777

ST_66: stg_227 [1/1] 3.18ns
branch54:0  br label %bb1777

ST_66: stg_228 [1/1] 3.18ns
branch53:0  br label %bb1777

ST_66: stg_229 [1/1] 3.18ns
branch52:0  br label %bb1777

ST_66: stg_230 [1/1] 3.18ns
branch51:0  br label %bb1777

ST_66: stg_231 [1/1] 3.18ns
branch50:0  br label %bb1777

ST_66: stg_232 [1/1] 3.18ns
branch49:0  br label %bb1777

ST_66: stg_233 [1/1] 3.18ns
branch48:0  br label %bb1777

ST_66: stg_234 [1/1] 3.18ns
branch47:0  br label %bb1777

ST_66: stg_235 [1/1] 3.18ns
branch46:0  br label %bb1777

ST_66: stg_236 [1/1] 3.18ns
branch45:0  br label %bb1777

ST_66: stg_237 [1/1] 3.18ns
branch44:0  br label %bb1777

ST_66: stg_238 [1/1] 3.18ns
branch43:0  br label %bb1777

ST_66: stg_239 [1/1] 3.18ns
branch42:0  br label %bb1777

ST_66: stg_240 [1/1] 3.18ns
branch41:0  br label %bb1777

ST_66: stg_241 [1/1] 3.18ns
branch40:0  br label %bb1777

ST_66: stg_242 [1/1] 3.18ns
branch39:0  br label %bb1777

ST_66: stg_243 [1/1] 3.18ns
branch38:0  br label %bb1777

ST_66: stg_244 [1/1] 3.18ns
branch37:0  br label %bb1777

ST_66: stg_245 [1/1] 3.18ns
branch36:0  br label %bb1777

ST_66: stg_246 [1/1] 3.18ns
branch35:0  br label %bb1777

ST_66: stg_247 [1/1] 3.18ns
branch34:0  br label %bb1777

ST_66: stg_248 [1/1] 3.18ns
branch33:0  br label %bb1777

ST_66: stg_249 [1/1] 3.18ns
branch32:0  br label %bb1777

ST_66: stg_250 [1/1] 3.18ns
branch31:0  br label %bb1777

ST_66: stg_251 [1/1] 3.18ns
branch30:0  br label %bb1777

ST_66: stg_252 [1/1] 3.18ns
branch29:0  br label %bb1777

ST_66: stg_253 [1/1] 3.18ns
branch28:0  br label %bb1777

ST_66: stg_254 [1/1] 3.18ns
branch27:0  br label %bb1777

ST_66: stg_255 [1/1] 3.18ns
branch26:0  br label %bb1777

ST_66: stg_256 [1/1] 3.18ns
branch25:0  br label %bb1777

ST_66: stg_257 [1/1] 3.18ns
branch24:0  br label %bb1777

ST_66: stg_258 [1/1] 3.18ns
branch23:0  br label %bb1777

ST_66: stg_259 [1/1] 3.18ns
branch22:0  br label %bb1777

ST_66: stg_260 [1/1] 3.18ns
branch21:0  br label %bb1777

ST_66: stg_261 [1/1] 3.18ns
branch20:0  br label %bb1777

ST_66: stg_262 [1/1] 3.18ns
branch19:0  br label %bb1777

ST_66: stg_263 [1/1] 3.18ns
branch18:0  br label %bb1777

ST_66: stg_264 [1/1] 3.18ns
branch17:0  br label %bb1777

ST_66: stg_265 [1/1] 3.18ns
branch16:0  br label %bb1777

ST_66: stg_266 [1/1] 3.18ns
branch15:0  br label %bb1777

ST_66: stg_267 [1/1] 3.18ns
branch14:0  br label %bb1777

ST_66: stg_268 [1/1] 3.18ns
branch13:0  br label %bb1777

ST_66: stg_269 [1/1] 3.18ns
branch12:0  br label %bb1777

ST_66: stg_270 [1/1] 3.18ns
branch11:0  br label %bb1777

ST_66: stg_271 [1/1] 3.18ns
branch10:0  br label %bb1777

ST_66: stg_272 [1/1] 3.18ns
branch9:0  br label %bb1777

ST_66: stg_273 [1/1] 3.18ns
branch8:0  br label %bb1777

ST_66: stg_274 [1/1] 3.18ns
branch7:0  br label %bb1777

ST_66: stg_275 [1/1] 3.18ns
branch6:0  br label %bb1777

ST_66: stg_276 [1/1] 3.18ns
branch5:0  br label %bb1777

ST_66: stg_277 [1/1] 3.18ns
branch4:0  br label %bb1777

ST_66: stg_278 [1/1] 3.18ns
branch3:0  br label %bb1777

ST_66: stg_279 [1/1] 3.18ns
branch2:0  br label %bb1777

ST_66: stg_280 [1/1] 3.18ns
branch1:0  br label %bb1777

ST_66: stg_281 [1/1] 3.18ns
branch63:0  br label %bb1777

ST_66: yy_load [1/1] 0.00ns
bb1777:2  %yy_load = load i32* %yy                        ; <i32> [#uses=2]

ST_66: tmp_13 [1/1] 2.00ns
bb1777:5  %tmp_13 = icmp eq i8 %tmp_24, 0                 ; <i1> [#uses=1]

ST_66: yy_1 [1/1] 2.44ns
bb1777:10  %yy_1 = add nsw i32 %yy_load, 1                 ; <i32> [#uses=1]

ST_66: yy_2 [1/1] 1.37ns
bb1777:12  %yy_2 = select i1 %tmp_14, i32 %yy_1, i32 %yy_load ; <i32> [#uses=1]

ST_66: stg_286 [1/1] 1.57ns
bb1777:15  store i32 %yy_2, i32* %yy


 <State 67>: 5.38ns
ST_67: p_Val2_s [1/1] 0.00ns
bb1777:0  %p_Val2_s = phi i64 [ -137436856321, %branch1 ], [ -1099511595009, %branch2 ], [ -4398046507009, %branch3 ], [ -4398046510593, %branch4 ], [ -8796093021953, %branch5 ], [ -8796093022145, %branch6 ], [ -17592186044409, %branch7 ], [ -17592186044413, %branch8 ], [ -17592186044413, %branch9 ], [ -17592186044413, %branch10 ], [ -17592186044409, %branch11 ], [ -17592186044409, %branch12 ], [ -17592186044401, %branch13 ], [ -17592186044401, %branch14 ], [ -17592186044385, %branch15 ], [ -35184372088769, %branch16 ], [ -35184372088769, %branch17 ], [ -17592186044289, %branch18 ], [ -17592186044161, %branch19 ], [ -35184372088577, %branch20 ], [ -70368744177153, %branch21 ], [ -1125899906841601, %branch22 ], [ -4503599627369473, %branch23 ], [ -9007199254738945, %branch24 ], [ -18014398509479937, %branch25 ], [ -36028797018959873, %branch26 ], [ -36028797018959873, %branch27 ], [ -72057594037919745, %branch28 ], [ -72057594037919745, %branch29 ], [ -144115188075847681, %branch30 ], [ -288230376151703553, %branch31 ], [ -288230376151695361, %branch32 ], [ -576460752303407105, %branch33 ], [ -1152921504606830593, %branch34 ], [ -1152921504606830593, %branch35 ], [ -2305843009213661185, %branch36 ], [ -4611686018427355137, %branch37 ], [ -9223372036854743041, %branch38 ], [ 32767, %branch39 ], [ 32767, %branch40 ], [ -9223372036854743041, %branch41 ], [ -9223372036854710273, %branch42 ], [ -9223372036854710273, %branch43 ], [ -4611686018427322369, %branch44 ], [ -4611686018427322369, %branch45 ], [ -4611686018427322369, %branch46 ], [ -4611686018427322369, %branch47 ], [ -2305843009213562881, %branch48 ], [ -2305843009213562881, %branch49 ], [ -1152921504606715905, %branch50 ], [ -1152921504606715905, %branch51 ], [ -1152921504606715905, %branch52 ], [ -1152921504606715905, %branch53 ], [ -576460752303292417, %branch54 ], [ -576460752303292417, %branch55 ], [ -288230376151580673, %branch56 ], [ -144115188075724801, %branch57 ], [ -144115188075724801, %branch58 ], [ -72057594037796865, %branch59 ], [ -36028797018832897, %branch60 ], [ -18014398509350913, %branch61 ], [ -9007199254609921, %branch62 ], [ -4503599627108353, %branch63 ], [ -2013265921, %bb17 ] ; <i64> [#uses=1]

ST_67: error_load [1/1] 0.00ns
bb1777:1  %error_load = load i32* %error                  ; <i32> [#uses=2]

ST_67: tmp_23 [1/1] 0.00ns
bb1777:4  %tmp_23 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 %index_assign) ; <i1> [#uses=1]

ST_67: or_cond [1/1] 1.37ns
bb1777:6  %or_cond = and i1 %tmp_23, %tmp_13              ; <i1> [#uses=1]

ST_67: error_1 [1/1] 2.44ns
bb1777:7  %error_1 = add nsw i32 %error_load, 1           ; <i32> [#uses=1]

ST_67: error_2 [1/1] 1.37ns
bb1777:8  %error_2 = select i1 %or_cond, i32 %error_1, i32 %error_load ; <i32> [#uses=1]

ST_67: stg_293 [1/1] 1.57ns
bb1777:16  store i32 %error_2, i32* %error

ST_67: stg_294 [1/1] 0.00ns
bb1777:17  br label %bb31_ifconv


 <State 68>: 1.86ns
ST_68: error_3 [1/1] 0.00ns
bb31_ifconv:0  %error_3 = load i32* %error                     ; <i32> [#uses=1]

ST_68: stg_296 [1/1] 1.86ns
bb31_ifconv:4  call void @_ssdm_op_FifoWrite.volatile.i32P(i32* %bb_top2_V, i32 %tmp_25)

ST_68: stg_297 [1/1] 1.86ns
bb31_ifconv:5  call void @_ssdm_op_FifoWrite.volatile.i32P(i32* %bb_bottom2_V, i32 %bottom_1)

ST_68: stg_298 [1/1] 1.86ns
bb31_ifconv:6  call void @_ssdm_op_FifoWrite.volatile.i32P(i32* %bb_left2_V, i32 %tmp_27)

ST_68: stg_299 [1/1] 1.86ns
bb31_ifconv:7  call void @_ssdm_op_FifoWrite.volatile.i32P(i32* %bb_right2_V, i32 %right_1)

ST_68: stg_300 [1/1] 1.70ns
bb31_ifconv:8  call void @_ssdm_op_FifoWrite.volatile.i1P(i1* %val_V_V, i1 %sel_tmp)

ST_68: stg_301 [1/1] 1.86ns
bb31_ifconv:9  call void @_ssdm_op_FifoWrite.volatile.i32P(i32* %err_V, i32 %error_3)

ST_68: stg_302 [1/1] 1.70ns
bb31_ifconv:10  call void @_ssdm_op_FifoWrite.volatile.i8P(i8* %out_data_stream_0_V, i8 %tmp_24)

ST_68: empty_144 [1/1] 0.00ns
bb31_ifconv:11  %empty_144 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str79, i32 %tmp_9) ; <i32> [#uses=0]

ST_68: stg_304 [1/1] 0.00ns
bb31_ifconv:12  br label %bb40



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
